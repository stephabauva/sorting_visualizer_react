{"ast":null,"code":"export default function bubbleSort(array) {\n  const n = array.length;\n  doBubbleSort(array, n);\n  return array;\n\n  function doBubbleSort(array, n) {\n    for (let i = 0; i <= array.length; i++) {\n      let swapped = false;\n\n      for (let j = 0; j <= n - i - 1; j++) {\n        if (array[j] > array[j + 1]) {\n          swap(array, j, j + 1);\n          swapped = true;\n        }\n      }\n\n      if (swapped == false) {\n        break;\n      }\n    }\n\n    ;\n  }\n}\n\nfunction swap(array, a, b) {\n  const temp = array[a];\n  array[a] = array[b];\n  array[b] = temp;\n}","map":{"version":3,"sources":["/Users/urdoom/sorting_visualizer_react/src/sortingAlgorithms/BubbleSort.js"],"names":["bubbleSort","array","n","length","doBubbleSort","i","swapped","j","swap","a","b","temp"],"mappings":"AAAA,eAAe,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AACtC,QAAMC,CAAC,GAAGD,KAAK,CAACE,MAAhB;AACAC,EAAAA,YAAY,CAACH,KAAD,EAAQC,CAAR,CAAZ;AACA,SAAOD,KAAP;;AAEA,WAASG,YAAT,CAAsBH,KAAtB,EAA6BC,CAA7B,EAAgC;AAC5B,SAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAEJ,KAAK,CAACE,MAAvB,EAA+BE,CAAC,EAAhC,EAAoC;AAChC,UAAIC,OAAO,GAAG,KAAd;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAGL,CAAC,GAACG,CAAF,GAAI,CAAtB,EAAyBE,CAAC,EAA1B,EAA8B;AAC1B,YAAIN,KAAK,CAACM,CAAD,CAAL,GAAWN,KAAK,CAACM,CAAC,GAAC,CAAH,CAApB,EAA2B;AACvBC,UAAAA,IAAI,CAACP,KAAD,EAAQM,CAAR,EAAWA,CAAC,GAAC,CAAb,CAAJ;AACAD,UAAAA,OAAO,GAAG,IAAV;AACH;AACJ;;AACD,UAAIA,OAAO,IAAI,KAAf,EAAsB;AAClB;AACH;AACJ;;AAAA;AACJ;AACJ;;AAED,SAASE,IAAT,CAAcP,KAAd,EAAqBQ,CAArB,EAAwBC,CAAxB,EAA2B;AACvB,QAAMC,IAAI,GAAGV,KAAK,CAACQ,CAAD,CAAlB;AACAR,EAAAA,KAAK,CAACQ,CAAD,CAAL,GAAWR,KAAK,CAACS,CAAD,CAAhB;AACAT,EAAAA,KAAK,CAACS,CAAD,CAAL,GAAWC,IAAX;AACH","sourcesContent":["export default function bubbleSort(array) {\n    const n = array.length;\n    doBubbleSort(array, n);\n    return array;\n\n    function doBubbleSort(array, n) {\n        for (let i=0; i<=array.length; i++) {\n            let swapped = false;\n            for (let j=0; j<= n-i-1; j++) {\n                if (array[j] > array[j+1]) {\n                    swap(array, j, j+1)\n                    swapped = true;\n                }\n            }\n            if (swapped == false) {\n                break\n            }\n        };\n    }\n}\n\nfunction swap(array, a, b) {\n    const temp = array[a];\n    array[a] = array[b];\n    array[b] = temp;\n}"]},"metadata":{},"sourceType":"module"}