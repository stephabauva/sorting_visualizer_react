{"ast":null,"code":"import _regeneratorRuntime from\"/Users/urdoom/sorting_visualizer_react/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/urdoom/sorting_visualizer_react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/urdoom/sorting_visualizer_react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/urdoom/sorting_visualizer_react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/urdoom/sorting_visualizer_react/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/urdoom/sorting_visualizer_react/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/urdoom/sorting_visualizer_react/node_modules/@babel/runtime/helpers/esm/createSuper\";import Particles from'react-particles-js';import particlesConfig from'../config/particlesConfig';import React from\"react\";import'./SortingVisualizer.css';import{connect}from'react-redux';import{doMergeSort}from'../sortingAlgorithms/MergeSort';import{doQuickSort}from'../sortingAlgorithms/QuickSort';import{doBubbleSort}from'../sortingAlgorithms/BubbleSort';import{doInsertionSort}from'../sortingAlgorithms/InsertionSort';/* ***** making this component check ig an element of the store has changed ******\nlinks:\nhttps://stackoverflow.com/questions/36557089/how-to-listen-for-specific-property-changes-in-redux-store-after-an-action-is-di\nhttps://stackoverflow.com/questions/36557089/how-to-listen-for-specific-property-changes-in-redux-store-after-an-action-is-di \n\n*********************************** */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var mapStateToProps=function mapStateToProps(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}// the store is accessible because we added Provider in index.js\n// console.log('SortingViz mapStateToProps:',state.listState);\nconsole.log('...args',args);console.log('args[0]',args[0]);console.log(\"args[0]['listReducer']['listState']\",args[0]['listReducer']['listState']);console.log(\"args[0]['sortSpeedReducer']['sortSpeed']\",args[0]['sortSpeedReducer']['sortSpeed']);return{myStoredList:args[0]['listReducer']['listState'],initialSortingSpeed:args[0]['sortSpeedReducer']['niceSpeed'],myStoredSpeed:args[0]['sortSpeedReducer']['sortSpeed']};};// This is the main color of the array bars.\nvar INIT_COLOR='turquoise';var RED_COLOR='red';var SELECT_COLOR='#f5bf42';var SWAP_COLOR,OVERWRITTE_COLOR;SWAP_COLOR=OVERWRITTE_COLOR='#8000ff';var FINAL_SORTED_COLOR='#7dff84';var ANIMATION_SPEED_MS=\"\";var SortingVisualizer=/*#__PURE__*/function(_React$Component){_inherits(SortingVisualizer,_React$Component);var _super=_createSuper(SortingVisualizer);function SortingVisualizer(props){var _this;_classCallCheck(this,SortingVisualizer);_this=_super.call(this,props);_this.state={array:[],speed:''};// console.log('this.array:', this.state.array);\nreturn _this;}/* compare previous list in store to the new actual list generated */_createClass(SortingVisualizer,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){console.log('prevprops:',prevProps);// -> { myStoredList: Array(..), dispatch: f }\n// console.log('this.props:', this.props);\nif(prevProps.myStoredList!==this.props.myStoredList){// Do whatever you want\n// console.log('previous list:',prevProps.lmyStoredList);\n// console.log('actual list:',this.props.myStoredList);\nthis.setState({array:this.props.myStoredList});}// console.log('ANIMATION_SPEED_MS BEFORE', ANIMATION_SPEED_MS)\n//if the speed slider was not moved (myStoredSpeed is undefined), just use the default value (35 in SpeedReducer.js)\nif(!ANIMATION_SPEED_MS){ANIMATION_SPEED_MS=prevProps.initialSortingSpeed;console.log('ANIMATION_SPEED_MS initial',ANIMATION_SPEED_MS);}//if the slider was moved then use the current new speed slider value\nif(prevProps.myStoredSpeed!==this.props.myStoredSpeed){ANIMATION_SPEED_MS=this.props.myStoredSpeed;console.log('ANIMATION_SPEED_MS AFTER',ANIMATION_SPEED_MS);}}/* ************************************************************ */ //to execute function asynchronously (async + await + new Promise + setTimout), link: https://dev.to/jameseaster/visualizing-merge-sort-3mnc\n},{key:\"mergeSort\",value:function(){var _mergeSort=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var animations,endViz,i,arrayBars,isColorChange,_animations$i,barOneIdx,barTwoIdx,barOneStyle,barTwoStyle,color,_animations$i2,_barOneIdx,newHeight;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:animations=doMergeSort(this.state.array);endViz=0;i=0;case 3:if(!(i<animations.length)){_context.next=30;break;}arrayBars=document.getElementsByClassName('array-bar');// get the array generated\nisColorChange=i%3!==2;//if remainder !== 2, then i is one of the two grad-and-color subarrays (not the overwritting one, the 3rd subarray)\nif(!isColorChange){_context.next=18;break;}//if True\n//then grab the 2 indices of the subarray\n_animations$i=_slicedToArray(animations[i],2),barOneIdx=_animations$i[0],barTwoIdx=_animations$i[1];// [idx list1 of the item that was compared with, item at idx list2]\n// get the style at these two indices\nbarOneStyle=arrayBars[barOneIdx].style;barTwoStyle=arrayBars[barTwoIdx].style;// if i is a multiple of 3, change the color (secondary), otherwise let its primary color\ncolor=i%3===0?RED_COLOR:INIT_COLOR;// The conditional (ternary) operator '?' is the only JavaScript operator that takes three operands: \n// a condition followed by a question mark (?), then an expression to execute if the condition is \n// truthy followed by a colon (:), and finally the expression to execute if the condition is falsy. \n// This operator is frequently used as a shortcut for the if statement.\n// link: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator#:~:text=The%20conditional%20(ternary)%20operator%20is,if%20the%20condition%20is%20falsy.\n//using a timeout, slowly change the colors of barOne and barTwo\n// setTimeout( () => {\n//     barOneStyle.backgroundColor = color;\n//     barTwoStyle.backgroundColor = color;\n// }, i * ANIMATION_SPEED_MS);\nbarOneStyle.backgroundColor=color;barTwoStyle.backgroundColor=color;endViz++;_context.next=16;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 16:_context.next=27;break;case 18://meaning if the remainder of i/3 === 2, then i is the subarray used for the overwritting \n_animations$i2=_slicedToArray(animations[i],2),_barOneIdx=_animations$i2[0],newHeight=_animations$i2[1];// -> [idx to be overwritten, overwritting value], \n// setTimeout( () => {\n//     // then get the idx, get the value\n//     // overwritte the old value\n//     // arrayBars[barOneIdx].style.backgroundColor = OVERWRITTE_COLOR;\n//     arrayBars[barOneIdx].style.height = `${newHeight}px`; \n// }, i * ANIMATION_SPEED_MS);\narrayBars[_barOneIdx].style.backgroundColor=OVERWRITTE_COLOR;arrayBars[_barOneIdx].style.height=\"\".concat(newHeight,\"px\");_context.next=23;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 23:arrayBars[_barOneIdx].style.backgroundColor=INIT_COLOR;_context.next=26;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 26:endViz++;case 27:i++;_context.next=3;break;case 30:if(endViz===animations.length){this.finalViz();}case 31:case\"end\":return _context.stop();}}},_callee,this);}));function mergeSort(){return _mergeSort.apply(this,arguments);}return mergeSort;}()},{key:\"quickSort\",value:function(){var _quickSort=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var animations,i,arrayBars,_animations$i3,command,pivotIdx,barPivotStyle,_animations$i4,_command,barOneIdx,barTwoIdx,barOneStyle,barTwoStyle,temp;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:animations=doQuickSort(this.state.array);console.log(animations);console.log('sorted:',animations);i=0;case 4:if(!(i<animations.length)){_context2.next=46;break;}arrayBars=document.getElementsByClassName('array-bar');if(!(animations[i].length===2)){_context2.next=15;break;}_animations$i3=_slicedToArray(animations[i],2),command=_animations$i3[0],pivotIdx=_animations$i3[1];console.log('cmd pvtidx:',command,pivotIdx);barPivotStyle=arrayBars[pivotIdx].style;barPivotStyle.backgroundColor=RED_COLOR;_context2.next=13;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 13:_context2.next=42;break;case 15:console.log('else:',i);_animations$i4=_slicedToArray(animations[i],3),_command=_animations$i4[0],barOneIdx=_animations$i4[1],barTwoIdx=_animations$i4[2];console.log(_command,barOneIdx,barTwoIdx);barOneStyle=arrayBars[barOneIdx].style;barTwoStyle=arrayBars[barTwoIdx].style;console.log('barOneSTyle:',barOneStyle,'barTwoStyle:',barTwoStyle);console.log(typeof _command);_context2.t0=_command;_context2.next=_context2.t0===-2?25:_context2.t0===-3?35:40;break;case 25:barOneStyle.backgroundColor=SWAP_COLOR;barTwoStyle.backgroundColor=SWAP_COLOR;_context2.next=29;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 29:temp=barOneStyle.height;barOneStyle.height=barTwoStyle.height;barTwoStyle.height=temp;_context2.next=34;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 34:return _context2.abrupt(\"break\",42);case 35:barOneStyle.backgroundColor=INIT_COLOR;barTwoStyle.backgroundColor=INIT_COLOR;_context2.next=39;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 39:return _context2.abrupt(\"break\",42);case 40:barOneStyle.backgroundColor=INIT_COLOR;barTwoStyle.backgroundColor=INIT_COLOR;case 42:if(i===animations.length-1){this.finalViz();}case 43:i++;_context2.next=4;break;case 46:case\"end\":return _context2.stop();}}},_callee2,this);}));function quickSort(){return _quickSort.apply(this,arguments);}return quickSort;}()},{key:\"bubbleSort\",value:function(){var _bubbleSort=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var animations,i,arrayBars,_animations$i5,command,barOneIdx,barTwoIdx,barOneStyle,barTwoStyle,temp;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log(this.state.array);animations=doBubbleSort(this.state.array);console.log(animations);i=0;case 4:if(!(i<animations.length)){_context3.next=41;break;}arrayBars=document.getElementsByClassName('array-bar');_animations$i5=_slicedToArray(animations[i],3),command=_animations$i5[0],barOneIdx=_animations$i5[1],barTwoIdx=_animations$i5[2];console.log('barTwoIdx:',barTwoIdx,'arrayBars.length',arrayBars.length);if(!(barTwoIdx===arrayBars.length)){_context3.next=10;break;}return _context3.abrupt(\"continue\",38);case 10:console.log(i,command,barOneIdx,barTwoIdx);barOneStyle=arrayBars[barOneIdx].style;barTwoStyle=arrayBars[barTwoIdx].style;_context3.t0=command;_context3.next=_context3.t0===0?16:_context3.t0===1?21:_context3.t0===2?26:34;break;case 16:barOneStyle.backgroundColor=INIT_COLOR;barTwoStyle.backgroundColor=INIT_COLOR;_context3.next=20;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 20:return _context3.abrupt(\"break\",36);case 21:barOneStyle.backgroundColor=RED_COLOR;barTwoStyle.backgroundColor=RED_COLOR;_context3.next=25;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 25:return _context3.abrupt(\"break\",36);case 26:arrayBars[barOneIdx].style.backgroundColor=OVERWRITTE_COLOR;arrayBars[barTwoIdx].style.backgroundColor=OVERWRITTE_COLOR;temp=barOneStyle.height;barOneStyle.height=barTwoStyle.height;barTwoStyle.height=temp;_context3.next=33;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 33:return _context3.abrupt(\"break\",36);case 34:barOneStyle.backgroundColor=INIT_COLOR;barTwoStyle.backgroundColor=INIT_COLOR;case 36:;if(i===animations.length-1){this.finalViz();}case 38:i++;_context3.next=4;break;case 41:;case 42:case\"end\":return _context3.stop();}}},_callee3,this);}));function bubbleSort(){return _bubbleSort.apply(this,arguments);}return bubbleSort;}()},{key:\"insertionSort\",value:function(){var _insertionSort=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var animations,i,arrayBars,keyIdxInit,barOneStyleInit,keyIdxOne,barOneStyleOne,barIdxTwo,barOneStyleTwo,barIdxThree,barOneStyleThree,_animations$i6,_,barOneIdx,key,barOneStyle4;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:animations=doInsertionSort(this.state.array);i=0;case 2:if(!(i<animations.length)){_context4.next=41;break;}arrayBars=document.getElementsByClassName('array-bar');_context4.t0=animations[i][0];_context4.next=_context4.t0===0?7:_context4.t0===1?13:_context4.t0===2?19:_context4.t0===3?25:_context4.t0===4?31:37;break;case 7:keyIdxInit=animations[i][1];barOneStyleInit=arrayBars[keyIdxInit].style;barOneStyleInit.backgroundColor=INIT_COLOR;_context4.next=12;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 12:return _context4.abrupt(\"break\",37);case 13:keyIdxOne=animations[i][1];barOneStyleOne=arrayBars[keyIdxOne].style;barOneStyleOne.backgroundColor=RED_COLOR;_context4.next=18;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 18:return _context4.abrupt(\"break\",37);case 19:barIdxTwo=animations[i][1];barOneStyleTwo=arrayBars[barIdxTwo].style;barOneStyleTwo.backgroundColor=SELECT_COLOR;_context4.next=24;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 24:return _context4.abrupt(\"break\",37);case 25:barIdxThree=animations[i][1];barOneStyleThree=arrayBars[barIdxThree].style;barOneStyleThree.backgroundColor=OVERWRITTE_COLOR;_context4.next=30;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 30:return _context4.abrupt(\"break\",37);case 31:_animations$i6=_slicedToArray(animations[i],3),_=_animations$i6[0],barOneIdx=_animations$i6[1],key=_animations$i6[2];barOneStyle4=arrayBars[barOneIdx].style;barOneStyle4.height=\"\".concat(key,\"px\");_context4.next=36;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 36:return _context4.abrupt(\"break\",37);case 37:if(i===animations.length-1){this.finalViz();}case 38:i++;_context4.next=2;break;case 41:case\"end\":return _context4.stop();}}},_callee4,this);}));function insertionSort(){return _insertionSort.apply(this,arguments);}return insertionSort;}()//finally, color the sorted list in green\n},{key:\"finalViz\",value:function(){var _finalViz=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var arrayBars,f,barStyle,_f,_barStyle;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:console.log('in final viz');arrayBars=document.getElementsByClassName('array-bar');f=0;case 3:if(!(f<arrayBars.length)){_context5.next=11;break;}// setTimeout( () => {\n//     const barStyle = arrayBars[f].style;\n//     barStyle.backgroundColor = FINAL_SORTED_COLOR;\n// }, f * ANIMATION_SPEED_MS * 2);\nbarStyle=arrayBars[f].style;barStyle.backgroundColor=FINAL_SORTED_COLOR;_context5.next=8;return new Promise(function(resolve){return setTimeout(resolve,ANIMATION_SPEED_MS);});case 8:f++;_context5.next=3;break;case 11:_context5.next=13;return new Promise(function(resolve){return setTimeout(resolve,800);});case 13:_f=arrayBars.length-1;case 14:if(!(_f>=0)){_context5.next=22;break;}// setTimeout( () => {\n//     const barStyle = arrayBars[f].style;\n//     barStyle.backgroundColor = FINAL_SORTED_COLOR;\n// }, f * ANIMATION_SPEED_MS * 2);\n_barStyle=arrayBars[_f].style;_barStyle.backgroundColor=INIT_COLOR;_context5.next=19;return new Promise(function(resolve){return setTimeout(resolve,20);});case 19:_f--;_context5.next=14;break;case 22:case\"end\":return _context5.stop();}}},_callee5);}));function finalViz(){return _finalViz.apply(this,arguments);}return finalViz;}()},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"array-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"buttons-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"sort-button\",style:{backgroundColor:\"#b5ff87\"},onClick:function onClick(){return _this2.mergeSort();},children:\"Merge Sort\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sort-button\",style:{backgroundColor:\"#ffdf87\"},onClick:function onClick(){return _this2.quickSort();},children:\"Quick Sort\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sort-button\",style:{backgroundColor:\"#87fff9\"},onClick:function onClick(){return _this2.bubbleSort();},children:\"Bubble Sort\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sort-button\",style:{backgroundColor:\"#ff8787\"},onClick:function onClick(){return _this2.insertionSort();},children:\"Insertion Sort\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute'},children:/*#__PURE__*/_jsx(Particles,{height:\"65vh\",width:\"100vw\",params:particlesConfig})}),this.state.array.map(function(value,idx){return/*#__PURE__*/_jsx(\"div\",{className:\"array-bar\",style:{backgroundColor:INIT_COLOR,height:\"\".concat(value,\"px\"),width:\"\".concat(1.5/3*window.innerWidth/_this2.state.array.length,\"px\"),marginTop:\"\".concat(50,\"px\")}},idx);})]});}}]);return SortingVisualizer;}(React.Component);export default connect(mapStateToProps)(SortingVisualizer);","map":{"version":3,"sources":["/Users/urdoom/sorting_visualizer_react/src/sortingVisualizer/SortingVisualizer.js"],"names":["Particles","particlesConfig","React","connect","doMergeSort","doQuickSort","doBubbleSort","doInsertionSort","mapStateToProps","args","console","log","myStoredList","initialSortingSpeed","myStoredSpeed","INIT_COLOR","RED_COLOR","SELECT_COLOR","SWAP_COLOR","OVERWRITTE_COLOR","FINAL_SORTED_COLOR","ANIMATION_SPEED_MS","SortingVisualizer","props","state","array","speed","prevProps","prevState","snapshot","setState","animations","endViz","i","length","arrayBars","document","getElementsByClassName","isColorChange","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","backgroundColor","Promise","resolve","setTimeout","newHeight","height","finalViz","command","pivotIdx","barPivotStyle","temp","keyIdxInit","barOneStyleInit","keyIdxOne","barOneStyleOne","barIdxTwo","barOneStyleTwo","barIdxThree","barOneStyleThree","_","key","barOneStyle4","f","barStyle","mergeSort","quickSort","bubbleSort","insertionSort","position","map","value","idx","width","window","innerWidth","marginTop","Component"],"mappings":"4zBAAA,MAAOA,CAAAA,SAAP,KAAsB,oBAAtB,CACA,MAAOC,CAAAA,eAAP,KAA4B,2BAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,yBAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,WAAT,KAA4B,gCAA5B,CACA,OAASC,WAAT,KAA4B,gCAA5B,CACA,OAASC,YAAT,KAA6B,iCAA7B,CACA,OAASC,eAAT,KAAgC,oCAAhC,CAEA;AACA;AACA;AACA;AACA;AACA,sC,wFAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAa,+BAATC,IAAS,0CAATA,IAAS,wBAAE;AACnC;AACAC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBF,IAAvB,EACAC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBF,IAAI,CAAC,CAAD,CAA3B,EACAC,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAmDF,IAAI,CAAC,CAAD,CAAJ,CAAQ,aAAR,EAAuB,WAAvB,CAAnD,EACAC,OAAO,CAACC,GAAR,CAAY,0CAAZ,CAAwDF,IAAI,CAAC,CAAD,CAAJ,CAAQ,kBAAR,EAA4B,WAA5B,CAAxD,EACA,MAAO,CACHG,YAAY,CAAEH,IAAI,CAAC,CAAD,CAAJ,CAAQ,aAAR,EAAuB,WAAvB,CADX,CAEHI,mBAAmB,CAAEJ,IAAI,CAAC,CAAD,CAAJ,CAAQ,kBAAR,EAA4B,WAA5B,CAFlB,CAGHK,aAAa,CAAEL,IAAI,CAAC,CAAD,CAAJ,CAAQ,kBAAR,EAA4B,WAA5B,CAHZ,CAAP,CAMD,CAZH,CAcA;AACA,GAAMM,CAAAA,UAAU,CAAG,WAAnB,CACA,GAAMC,CAAAA,SAAS,CAAG,KAAlB,CACA,GAAMC,CAAAA,YAAY,CAAG,SAArB,CACA,GAAIC,CAAAA,UAAJ,CAAgBC,gBAAhB,CACAD,UAAU,CAAGC,gBAAgB,CAAG,SAAhC,CACA,GAAMC,CAAAA,kBAAkB,CAAG,SAA3B,CACA,GAAIC,CAAAA,kBAAkB,CAAG,EAAzB,C,GAEMC,CAAAA,iB,kIACF,2BAAYC,KAAZ,CAAmB,mDACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CAAEC,KAAK,CAAE,EAAT,CAAaC,KAAK,CAAE,EAApB,CAAb,CACA;AAHe,aAIhB,CACH,qE,gEACA,4BAAmBC,SAAnB,CAA8BC,SAA9B,CAAyCC,QAAzC,CAAmD,CAC/CnB,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BgB,SAA1B,EAAsC;AACtC;AACA,GAAIA,SAAS,CAACf,YAAV,GAA2B,KAAKW,KAAL,CAAWX,YAA1C,CAAwD,CACpD;AACA;AACA;AACA,KAAKkB,QAAL,CAAc,CAAEL,KAAK,CAAE,KAAKF,KAAL,CAAWX,YAApB,CAAd,EACH,CACD;AACA;AACA,GAAI,CAAES,kBAAN,CAA0B,CACtBA,kBAAkB,CAAGM,SAAS,CAACd,mBAA/B,CACAH,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0CU,kBAA1C,EACH,CACD;AACA,GAAIM,SAAS,CAACb,aAAV,GAA4B,KAAKS,KAAL,CAAWT,aAA3C,CAA0D,CACtDO,kBAAkB,CAAG,KAAKE,KAAL,CAAWT,aAAhC,CACAJ,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAwCU,kBAAxC,EACH,CACJ,CACD,kE,CACJ;2GACI,uRACUU,UADV,CACuB3B,WAAW,CAAC,KAAKoB,KAAL,CAAWC,KAAZ,CADlC,CAEQO,MAFR,CAEiB,CAFjB,CAGaC,CAHb,CAGiB,CAHjB,aAGoBA,CAAC,CAAGF,UAAU,CAACG,MAHnC,2BAKcC,SALd,CAK0BC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAL1B,CAKwE;AAC1DC,aANd,CAM8BL,CAAC,CAAG,CAAJ,GAAU,CANxC,CAM2C;AAN3C,IAOYK,aAPZ,0BAO6B;AACjB;AARZ,6BAS2CP,UAAU,CAACE,CAAD,CATrD,IASmBM,SATnB,kBAS8BC,SAT9B,kBAS0D;AAC9C;AACMC,WAXlB,CAWgCN,SAAS,CAACI,SAAD,CAAT,CAAqBG,KAXrD,CAYkBC,WAZlB,CAYgCR,SAAS,CAACK,SAAD,CAAT,CAAqBE,KAZrD,CAaY;AACME,KAdlB,CAc0BX,CAAC,CAAG,CAAJ,GAAU,CAAV,CAAcjB,SAAd,CAA0BD,UAdpD,CAeY;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA0B,WAAW,CAACI,eAAZ,CAA8BD,KAA9B,CACAD,WAAW,CAACE,eAAZ,CAA8BD,KAA9B,CACAZ,MAAM,GA5BlB,uBA6BkB,IAAIc,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CA7BlB,wCA+BY;AA/BZ,8BAgC2CU,UAAU,CAACE,CAAD,CAhCrD,IAgCmBM,UAhCnB,mBAgC8BU,SAhC9B,mBAgC0D;AAC9C;AACA;AAEA;AACA;AACA;AACA;AACAd,SAAS,CAACI,UAAD,CAAT,CAAqBG,KAArB,CAA2BG,eAA3B,CAA6C1B,gBAA7C,CACAgB,SAAS,CAACI,UAAD,CAAT,CAAqBG,KAArB,CAA2BQ,MAA3B,WAAuCD,SAAvC,OAzCZ,uBA0CkB,IAAIH,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CA1ClB,SA2CYc,SAAS,CAACI,UAAD,CAAT,CAAqBG,KAArB,CAA2BG,eAA3B,CAA6C9B,UAA7C,CA3CZ,uBA4CkB,IAAI+B,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CA5ClB,SA6CYW,MAAM,GA7ClB,QAG2CC,CAAC,EAH5C,+BAiDI,GAAID,MAAM,GAAKD,UAAU,CAACG,MAA1B,CAAmC,CAC/B,KAAKiB,QAAL,GACH,CAnDL,4D,gMAsDA,0RACUpB,UADV,CACuB1B,WAAW,CAAC,KAAKmB,KAAL,CAAWC,KAAZ,CADlC,CAEIf,OAAO,CAACC,GAAR,CAAYoB,UAAZ,EACArB,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAsBoB,UAAtB,EACSE,CAJb,CAIiB,CAJjB,aAIoBA,CAAC,CAAGF,UAAU,CAACG,MAJnC,4BAKcC,SALd,CAK0BC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAL1B,MAMYN,UAAU,CAACE,CAAD,CAAV,CAAcC,MAAd,GAAyB,CANrC,0DAOyCH,UAAU,CAACE,CAAD,CAPnD,IAOmBmB,OAPnB,mBAO4BC,QAP5B,mBAQY3C,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2ByC,OAA3B,CAAoCC,QAApC,EACMC,aATlB,CASkCnB,SAAS,CAACkB,QAAD,CAAT,CAAoBX,KATtD,CAUYY,aAAa,CAACT,eAAd,CAAgC7B,SAAhC,CAVZ,wBAWkB,IAAI8B,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CAXlB,yCAaQX,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBsB,CAArB,EAbR,8BAcgDF,UAAU,CAACE,CAAD,CAd1D,IAcemB,QAdf,mBAcwBb,SAdxB,mBAcmCC,SAdnC,mBAeQ9B,OAAO,CAACC,GAAR,CAAYyC,QAAZ,CAAqBb,SAArB,CAAgCC,SAAhC,EACMC,WAhBd,CAgB4BN,SAAS,CAACI,SAAD,CAAT,CAAqBG,KAhBjD,CAiBcC,WAjBd,CAiB4BR,SAAS,CAACK,SAAD,CAAT,CAAqBE,KAjBjD,CAkBQhC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4B8B,WAA5B,CAAyC,cAAzC,CAAyDE,WAAzD,EACAjC,OAAO,CAACC,GAAR,CAAY,MAAOyC,CAAAA,QAAnB,EAnBR,aAoBeA,QApBf,+BAqBiB,CAAC,CArBlB,mBA+BiB,CAAC,CA/BlB,qBAsBgBX,WAAW,CAACI,eAAZ,CAA8B3B,UAA9B,CACAyB,WAAW,CAACE,eAAZ,CAA8B3B,UAA9B,CAvBhB,wBAwBsB,IAAI4B,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CAxBtB,SAyBsBkC,IAzBtB,CAyB6Bd,WAAW,CAACS,MAzBzC,CA0BgBT,WAAW,CAACS,MAAZ,CAAqBP,WAAW,CAACO,MAAjC,CACAP,WAAW,CAACO,MAAZ,CAAqBK,IAArB,CA3BhB,wBA4BsB,IAAIT,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CA5BtB,qDAgCgBoB,WAAW,CAACI,eAAZ,CAA8B9B,UAA9B,CACA4B,WAAW,CAACE,eAAZ,CAA8B9B,UAA9B,CAjChB,wBAkCsB,IAAI+B,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CAlCtB,qDAsCgBoB,WAAW,CAACI,eAAZ,CAA8B9B,UAA9B,CACA4B,WAAW,CAACE,eAAZ,CAA8B9B,UAA9B,CAvChB,QA2CU,GAAIkB,CAAC,GAAKF,UAAU,CAACG,MAAX,CAAkB,CAA5B,CAAgC,CAC9B,KAAKiB,QAAL,GACH,CA7CT,QAI2ClB,CAAC,EAJ5C,sF,kMAiDA,2OACIvB,OAAO,CAACC,GAAR,CAAY,KAAKa,KAAL,CAAWC,KAAvB,EACMM,UAFV,CAEuBzB,YAAY,CAAC,KAAKkB,KAAL,CAAWC,KAAZ,CAFnC,CAGIf,OAAO,CAACC,GAAR,CAAYoB,UAAZ,EACSE,CAJb,CAIiB,CAJjB,aAIoBA,CAAC,CAAGF,UAAU,CAACG,MAJnC,4BAKcC,SALd,CAK0BC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAL1B,+BAMgDN,UAAU,CAACE,CAAD,CAN1D,IAMemB,OANf,mBAMwBb,SANxB,mBAMmCC,SANnC,mBAOQ9B,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0B6B,SAA1B,CAAqC,kBAArC,CAAyDL,SAAS,CAACD,MAAnE,EAPR,KAQYM,SAAS,GAAKL,SAAS,CAACD,MARpC,2EAWQxB,OAAO,CAACC,GAAR,CAAYsB,CAAZ,CAAemB,OAAf,CAAwBb,SAAxB,CAAmCC,SAAnC,EACMC,WAZd,CAY4BN,SAAS,CAACI,SAAD,CAAT,CAAqBG,KAZjD,CAacC,WAbd,CAa4BR,SAAS,CAACK,SAAD,CAAT,CAAqBE,KAbjD,cAceU,OAdf,+BAeiB,CAfjB,mBAoBiB,CApBjB,mBAyBiB,CAzBjB,qBAgBgBX,WAAW,CAACI,eAAZ,CAA8B9B,UAA9B,CACA4B,WAAW,CAACE,eAAZ,CAA8B9B,UAA9B,CAjBhB,wBAkBsB,IAAI+B,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CAlBtB,qDAqBgBoB,WAAW,CAACI,eAAZ,CAA8B7B,SAA9B,CACA2B,WAAW,CAACE,eAAZ,CAA8B7B,SAA9B,CAtBhB,wBAuBsB,IAAI8B,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CAvBtB,qDA0BgBc,SAAS,CAACI,SAAD,CAAT,CAAqBG,KAArB,CAA2BG,eAA3B,CAA6C1B,gBAA7C,CACAgB,SAAS,CAACK,SAAD,CAAT,CAAqBE,KAArB,CAA2BG,eAA3B,CAA6C1B,gBAA7C,CACMoC,IA5BtB,CA4B6Bd,WAAW,CAACS,MA5BzC,CA6BgBT,WAAW,CAACS,MAAZ,CAAqBP,WAAW,CAACO,MAAjC,CACAP,WAAW,CAACO,MAAZ,CAAqBK,IAArB,CA9BhB,wBA+BsB,IAAIT,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CA/BtB,qDAkCgBoB,WAAW,CAACI,eAAZ,CAA8B9B,UAA9B,CACA4B,WAAW,CAACE,eAAZ,CAA8B9B,UAA9B,CAnChB,QAoCS,CACD,GAAIkB,CAAC,GAAKF,UAAU,CAACG,MAAX,CAAkB,CAA5B,CAAgC,CAC5B,KAAKiB,QAAL,GACH,CAvCT,QAI2ClB,CAAC,EAJ5C,gCAwCK,CAxCL,8D,2MA2CA,yTACUF,UADV,CACuBxB,eAAe,CAAC,KAAKiB,KAAL,CAAWC,KAAZ,CADtC,CAEaQ,CAFb,CAEiB,CAFjB,aAEoBA,CAAC,CAAGF,UAAU,CAACG,MAFnC,4BAGcC,SAHd,CAG0BC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAH1B,cAIeN,UAAU,CAACE,CAAD,CAAV,CAAc,CAAd,CAJf,+BAKiB,CALjB,kBAWiB,CAXjB,mBAiBiB,CAjBjB,mBAuBiB,CAvBjB,mBA6BiB,CA7BjB,oBAMsBuB,UANtB,CAMmCzB,UAAU,CAACE,CAAD,CAAV,CAAc,CAAd,CANnC,CAOsBwB,eAPtB,CAOwCtB,SAAS,CAACqB,UAAD,CAAT,CAAsBd,KAP9D,CAQgBe,eAAe,CAACZ,eAAhB,CAAiC9B,UAAjC,CARhB,wBASsB,IAAI+B,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CATtB,qDAYsBqC,SAZtB,CAYkC3B,UAAU,CAACE,CAAD,CAAV,CAAc,CAAd,CAZlC,CAasB0B,cAbtB,CAauCxB,SAAS,CAACuB,SAAD,CAAT,CAAqBhB,KAb5D,CAcgBiB,cAAc,CAACd,eAAf,CAAgC7B,SAAhC,CAdhB,wBAesB,IAAI8B,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CAftB,qDAkBsBuC,SAlBtB,CAkBkC7B,UAAU,CAACE,CAAD,CAAV,CAAc,CAAd,CAlBlC,CAmBsB4B,cAnBtB,CAmBuC1B,SAAS,CAACyB,SAAD,CAAT,CAAqBlB,KAnB5D,CAoBgBmB,cAAc,CAAChB,eAAf,CAAgC5B,YAAhC,CApBhB,wBAqBsB,IAAI6B,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CArBtB,qDAwBsByC,WAxBtB,CAwBoC/B,UAAU,CAACE,CAAD,CAAV,CAAc,CAAd,CAxBpC,CAyBsB8B,gBAzBtB,CAyByC5B,SAAS,CAAC2B,WAAD,CAAT,CAAuBpB,KAzBhE,CA0BgBqB,gBAAgB,CAAClB,eAAjB,CAAkC1B,gBAAlC,CA1BhB,wBA2BsB,IAAI2B,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CA3BtB,mFA8B4CU,UAAU,CAACE,CAAD,CA9BtD,IA8BuB+B,CA9BvB,mBA8B0BzB,SA9B1B,mBA8BqC0B,GA9BrC,mBA+BsBC,YA/BtB,CA+BqC/B,SAAS,CAACI,SAAD,CAAT,CAAqBG,KA/B1D,CAgCgBwB,YAAY,CAAChB,MAAb,WAAyBe,GAAzB,OAhChB,wBAiCsB,IAAInB,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CAjCtB,qDAqCY,GAAIY,CAAC,GAAKF,UAAU,CAACG,MAAX,CAAkB,CAA5B,CAAgC,CAC5B,KAAKiB,QAAL,GACH,CAvCb,QAE2ClB,CAAC,EAF5C,sF,iGA4CA;yGACF,8KACIvB,OAAO,CAACC,GAAR,CAAY,cAAZ,EACQwB,SAFZ,CAEwBC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAFxB,CAGmB8B,CAHnB,CAGqB,CAHrB,aAGwBA,CAAC,CAAChC,SAAS,CAACD,MAHpC,4BAIc;AACA;AACA;AACA;AACMkC,QARpB,CAQ+BjC,SAAS,CAACgC,CAAD,CAAT,CAAazB,KAR5C,CASc0B,QAAQ,CAACvB,eAAT,CAA2BzB,kBAA3B,CATd,uBAUoB,IAAI0B,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU1B,kBAAV,CAAvB,EAAZ,CAVpB,QAG4C8C,CAAC,EAH7C,wDAYgB,IAAIrB,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU,GAAV,CAAvB,EAAZ,CAZhB,SAamBoB,EAbnB,CAauBhC,SAAS,CAACD,MAAV,CAAiB,CAbxC,cAa2CiC,EAAC,EAAI,CAbhD,4BAcc;AACA;AACA;AACA;AACMC,SAlBpB,CAkB+BjC,SAAS,CAACgC,EAAD,CAAT,CAAazB,KAlB5C,CAmBc0B,SAAQ,CAACvB,eAAT,CAA2B9B,UAA3B,CAnBd,wBAoBoB,IAAI+B,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU,EAAV,CAAvB,EAAZ,CApBpB,SAamDoB,EAAC,EAbpD,kF,wGAwBE,iBAAS,iBACL,mBAAO,aAAK,SAAS,CAAC,iBAAf,wBACH,aAAK,SAAS,CAAC,mBAAf,wBACI,eAAQ,SAAS,CAAC,aAAlB,CAAgC,KAAK,CAAE,CAACtB,eAAe,CAAC,SAAjB,CAAvC,CAAoE,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACwB,SAAL,EAAN,EAA7E,wBADJ,cAEI,eAAQ,SAAS,CAAC,aAAlB,CAAgC,KAAK,CAAE,CAACxB,eAAe,CAAC,SAAjB,CAAvC,CAAoE,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACyB,SAAL,EAAN,EAA7E,wBAFJ,cAGI,eAAQ,SAAS,CAAC,aAAlB,CAAgC,KAAK,CAAE,CAACzB,eAAe,CAAC,SAAjB,CAAvC,CAAmE,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC0B,UAAL,EAAN,EAA5E,yBAHJ,cAII,eAAQ,SAAS,CAAC,aAAlB,CAAgC,KAAK,CAAE,CAAC1B,eAAe,CAAC,SAAjB,CAAvC,CAAmE,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC2B,aAAL,EAAN,EAA5E,4BAJJ,GADG,cAOH,YAAK,KAAK,CAAE,CAACC,QAAQ,CAAE,UAAX,CAAZ,uBACI,KAAC,SAAD,EAAW,MAAM,CAAC,MAAlB,CAAyB,KAAK,CAAC,OAA/B,CAAuC,MAAM,CAAExE,eAA/C,EADJ,EAPG,CAUF,KAAKuB,KAAL,CAAWC,KAAX,CAAiBiD,GAAjB,CAAqB,SAACC,KAAD,CAAQC,GAAR,qBAClB,YACA,SAAS,CAAC,WADV,CAGA,KAAK,CAAE,CACH/B,eAAe,CAAE9B,UADd,CAEHmC,MAAM,WAAKyB,KAAL,MAFH,CAGHE,KAAK,WAAM,IAAI,CAAL,CAAQC,MAAM,CAACC,UAAf,CAA0B,MAAI,CAACvD,KAAL,CAAWC,KAAX,CAAiBS,MAAhD,MAHF,CAIH8C,SAAS,WAAK,EAAL,MAJN,CAHP,EAEKJ,GAFL,CADkB,EAArB,CAVE,GAAP,CAsBH,C,+BA5Q2B1E,KAAK,CAAC+E,S,EAgRtC,cAAe9E,CAAAA,OAAO,CAACK,eAAD,CAAP,CAAyBc,iBAAzB,CAAf","sourcesContent":["import Particles from 'react-particles-js';\nimport particlesConfig from '../config/particlesConfig';\nimport React from \"react\";\nimport './SortingVisualizer.css';\nimport { connect } from 'react-redux';\nimport { doMergeSort } from '../sortingAlgorithms/MergeSort'\nimport { doQuickSort } from '../sortingAlgorithms/QuickSort'\nimport { doBubbleSort } from '../sortingAlgorithms/BubbleSort'\nimport { doInsertionSort } from '../sortingAlgorithms/InsertionSort'\n\n/* ***** making this component check ig an element of the store has changed ******\nlinks:\nhttps://stackoverflow.com/questions/36557089/how-to-listen-for-specific-property-changes-in-redux-store-after-an-action-is-di\nhttps://stackoverflow.com/questions/36557089/how-to-listen-for-specific-property-changes-in-redux-store-after-an-action-is-di \n\n*********************************** */\n\nconst mapStateToProps = (...args) => { // the store is accessible because we added Provider in index.js\n    // console.log('SortingViz mapStateToProps:',state.listState);\n    console.log('...args', args)\n    console.log('args[0]', args[0])\n    console.log(\"args[0]['listReducer']['listState']\", args[0]['listReducer']['listState'])\n    console.log(\"args[0]['sortSpeedReducer']['sortSpeed']\", args[0]['sortSpeedReducer']['sortSpeed'])\n    return { \n        myStoredList: args[0]['listReducer']['listState'], \n        initialSortingSpeed: args[0]['sortSpeedReducer']['niceSpeed'],\n        myStoredSpeed: args[0]['sortSpeedReducer']['sortSpeed'] \n    };\n    \n  };\n\n// This is the main color of the array bars.\nconst INIT_COLOR = 'turquoise';\nconst RED_COLOR = 'red';\nconst SELECT_COLOR = '#f5bf42';\nvar SWAP_COLOR, OVERWRITTE_COLOR;\nSWAP_COLOR = OVERWRITTE_COLOR = '#8000ff';\nconst FINAL_SORTED_COLOR = '#7dff84';\nlet ANIMATION_SPEED_MS = \"\";\n\nclass SortingVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { array: [], speed: ''};\n        // console.log('this.array:', this.state.array);\n      }\n    /* compare previous list in store to the new actual list generated */\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log('prevprops:', prevProps); // -> { myStoredList: Array(..), dispatch: f }\n        // console.log('this.props:', this.props);\n        if (prevProps.myStoredList !== this.props.myStoredList) {\n            // Do whatever you want\n            // console.log('previous list:',prevProps.lmyStoredList);\n            // console.log('actual list:',this.props.myStoredList);\n            this.setState({ array: this.props.myStoredList });\n        }\n        // console.log('ANIMATION_SPEED_MS BEFORE', ANIMATION_SPEED_MS)\n        //if the speed slider was not moved (myStoredSpeed is undefined), just use the default value (35 in SpeedReducer.js)\n        if (! ANIMATION_SPEED_MS) {\n            ANIMATION_SPEED_MS = prevProps.initialSortingSpeed ;\n            console.log('ANIMATION_SPEED_MS initial', ANIMATION_SPEED_MS)\n        }    \n        //if the slider was moved then use the current new speed slider value\n        if (prevProps.myStoredSpeed !== this.props.myStoredSpeed) {\n            ANIMATION_SPEED_MS = this.props.myStoredSpeed \n            console.log('ANIMATION_SPEED_MS AFTER', ANIMATION_SPEED_MS)\n        }\n    }\n    /* ************************************************************ */\n//to execute function asynchronously (async + await + new Promise + setTimout), link: https://dev.to/jameseaster/visualizing-merge-sort-3mnc\n    async mergeSort() {\n        const animations = doMergeSort(this.state.array) \n        let endViz = 0;\n        for (let i = 0; i < animations.length; i++) {\n\n            const arrayBars = document.getElementsByClassName('array-bar'); // get the array generated\n            const isColorChange = i % 3 !== 2; //if remainder !== 2, then i is one of the two grad-and-color subarrays (not the overwritting one, the 3rd subarray)\n            if (isColorChange) { //if True\n                //then grab the 2 indices of the subarray\n                const [barOneIdx, barTwoIdx] = animations[i]; // [idx list1 of the item that was compared with, item at idx list2]\n                // get the style at these two indices\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n                // if i is a multiple of 3, change the color (secondary), otherwise let its primary color\n                const color = i % 3 === 0 ? RED_COLOR : INIT_COLOR;\n                // The conditional (ternary) operator '?' is the only JavaScript operator that takes three operands: \n                // a condition followed by a question mark (?), then an expression to execute if the condition is \n                // truthy followed by a colon (:), and finally the expression to execute if the condition is falsy. \n                // This operator is frequently used as a shortcut for the if statement.\n                // link: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator#:~:text=The%20conditional%20(ternary)%20operator%20is,if%20the%20condition%20is%20falsy.\n\n                //using a timeout, slowly change the colors of barOne and barTwo\n                // setTimeout( () => {\n                //     barOneStyle.backgroundColor = color;\n                //     barTwoStyle.backgroundColor = color;\n                // }, i * ANIMATION_SPEED_MS);\n                barOneStyle.backgroundColor = color;\n                barTwoStyle.backgroundColor = color;\n                endViz++;\n                await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n            } else {\n                //meaning if the remainder of i/3 === 2, then i is the subarray used for the overwritting \n                const [barOneIdx, newHeight] = animations[i]; // -> [idx to be overwritten, overwritting value], \n                // setTimeout( () => {\n                //     // then get the idx, get the value\n                    \n                //     // overwritte the old value\n                //     // arrayBars[barOneIdx].style.backgroundColor = OVERWRITTE_COLOR;\n                //     arrayBars[barOneIdx].style.height = `${newHeight}px`; \n                // }, i * ANIMATION_SPEED_MS);\n                arrayBars[barOneIdx].style.backgroundColor = OVERWRITTE_COLOR;\n                arrayBars[barOneIdx].style.height = `${newHeight}px`; \n                await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                arrayBars[barOneIdx].style.backgroundColor = INIT_COLOR;\n                await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                endViz++;\n            }\n        } \n\n        if (endViz === animations.length ) {\n            this.finalViz();\n        }\n    }\n\n    async quickSort() {\n        const animations = doQuickSort(this.state.array);\n        console.log(animations);\n        console.log('sorted:',animations);\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName('array-bar'); \n            if (animations[i].length === 2) {\n                const [command, pivotIdx] =  animations[i];\n                console.log('cmd pvtidx:', command, pivotIdx);\n                const barPivotStyle = arrayBars[pivotIdx].style;\n                barPivotStyle.backgroundColor = RED_COLOR;\n                await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n            } else {\n            console.log('else:', i);\n            const [command, barOneIdx, barTwoIdx] = animations[i];\n            console.log(command, barOneIdx, barTwoIdx);\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            console.log('barOneSTyle:', barOneStyle, 'barTwoStyle:', barTwoStyle);\n            console.log(typeof command);\n            switch(command) {\n                case -2:\n                    barOneStyle.backgroundColor = SWAP_COLOR;\n                    barTwoStyle.backgroundColor = SWAP_COLOR;\n                    await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                    const temp = barOneStyle.height;\n                    barOneStyle.height = barTwoStyle.height;\n                    barTwoStyle.height = temp;\n                    await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                    // await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                  break;\n                case -3:\n                    barOneStyle.backgroundColor = INIT_COLOR;\n                    barTwoStyle.backgroundColor = INIT_COLOR;\n                    await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                    // await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                    break\n                default:\n                    barOneStyle.backgroundColor = INIT_COLOR;\n                    barTwoStyle.backgroundColor = INIT_COLOR;\n              }\n            }\n            \n              if (i === animations.length-1 ) {\n                this.finalViz();\n            }\n        }\n    }\n\n    async bubbleSort() {\n        console.log(this.state.array);\n        const animations = doBubbleSort(this.state.array);\n        console.log(animations);\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName('array-bar'); \n            const [command, barOneIdx, barTwoIdx] = animations[i];\n            console.log('barTwoIdx:', barTwoIdx, 'arrayBars.length', arrayBars.length);\n            if (barTwoIdx === arrayBars.length) {\n                continue;\n            }\n            console.log(i, command, barOneIdx, barTwoIdx);\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            switch(command) {\n                case 0: \n                    barOneStyle.backgroundColor = INIT_COLOR;\n                    barTwoStyle.backgroundColor = INIT_COLOR;\n                    await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                    break;\n                case 1:\n                    barOneStyle.backgroundColor = RED_COLOR;\n                    barTwoStyle.backgroundColor = RED_COLOR;\n                    await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                    break;\n                case 2:\n                    arrayBars[barOneIdx].style.backgroundColor = OVERWRITTE_COLOR;\n                    arrayBars[barTwoIdx].style.backgroundColor = OVERWRITTE_COLOR;\n                    const temp = barOneStyle.height;\n                    barOneStyle.height = barTwoStyle.height;\n                    barTwoStyle.height = temp;\n                    await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                    break;\n                default:\n                    barOneStyle.backgroundColor = INIT_COLOR;\n                    barTwoStyle.backgroundColor = INIT_COLOR;\n            };\n            if (i === animations.length-1 ) {\n                this.finalViz();\n            }\n        };\n    }\n\n    async insertionSort() {\n        const animations = doInsertionSort(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName('array-bar'); \n            switch(animations[i][0]) {\n                case 0:\n                    const keyIdxInit = animations[i][1];\n                    const barOneStyleInit = arrayBars[keyIdxInit].style;\n                    barOneStyleInit.backgroundColor= INIT_COLOR; \n                    await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                    break;\n                case 1:\n                    const keyIdxOne = animations[i][1];\n                    const barOneStyleOne = arrayBars[keyIdxOne].style;\n                    barOneStyleOne.backgroundColor= RED_COLOR; \n                    await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                    break;\n                case 2:\n                    const barIdxTwo = animations[i][1];\n                    const barOneStyleTwo = arrayBars[barIdxTwo].style;\n                    barOneStyleTwo.backgroundColor= SELECT_COLOR; \n                    await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                    break;\n                case 3:\n                    const barIdxThree = animations[i][1];\n                    const barOneStyleThree = arrayBars[barIdxThree].style;\n                    barOneStyleThree.backgroundColor= OVERWRITTE_COLOR; \n                    await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                    break;\n                case 4:\n                    const [_, barOneIdx, key] = animations[i];\n                    const barOneStyle4 = arrayBars[barOneIdx].style;\n                    barOneStyle4.height = `${key}px`;\n                    await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n                    break;\n                default:\n                } \n                if (i === animations.length-1 ) {\n                    this.finalViz();\n                }   \n            }\n          \n        }\n    \n    //finally, color the sorted list in green\n  async finalViz() {\n      console.log('in final viz');\n        const arrayBars = document.getElementsByClassName('array-bar');\n            for (let f=0; f<arrayBars.length; f++) {\n                // setTimeout( () => {\n                //     const barStyle = arrayBars[f].style;\n                //     barStyle.backgroundColor = FINAL_SORTED_COLOR;\n                // }, f * ANIMATION_SPEED_MS * 2);\n                const barStyle = arrayBars[f].style;\n                barStyle.backgroundColor = FINAL_SORTED_COLOR;\n                await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n            } \n            await new Promise((resolve) => setTimeout(resolve, 800));\n            for (let f = arrayBars.length-1; f >= 0; f--) {\n                // setTimeout( () => {\n                //     const barStyle = arrayBars[f].style;\n                //     barStyle.backgroundColor = FINAL_SORTED_COLOR;\n                // }, f * ANIMATION_SPEED_MS * 2);\n                const barStyle = arrayBars[f].style;\n                barStyle.backgroundColor = INIT_COLOR;\n                await new Promise((resolve) => setTimeout(resolve, 20));\n            } \n   }; \n  \n    render() {\n        return <div className='array-container'>\n            <div className='buttons-container'>\n                <button className=\"sort-button\" style={{backgroundColor:\"#b5ff87\"}} onClick={() => this.mergeSort()}>Merge Sort</button>\n                <button className=\"sort-button\" style={{backgroundColor:\"#ffdf87\"}} onClick={() => this.quickSort()}>Quick Sort</button>\n                <button className=\"sort-button\" style={{backgroundColor:\"#87fff9\"}}onClick={() => this.bubbleSort()}>Bubble Sort</button>\n                <button className=\"sort-button\" style={{backgroundColor:\"#ff8787\"}}onClick={() => this.insertionSort()}>Insertion Sort</button>\n            </div>\n            <div style={{position: 'absolute'}}>\n                <Particles height=\"65vh\" width=\"100vw\" params={particlesConfig} />\n            </div>\n            {this.state.array.map((value, idx) => (\n                <div\n                className=\"array-bar\"\n                key={idx}\n                style={{\n                    backgroundColor: INIT_COLOR,\n                    height: `${value}px`,\n                    width: `${(1.5/3)*window.innerWidth/this.state.array.length}px`,\n                    marginTop: `${50}px`\n                }}></div>\n            ))}\n        </div> ;\n    }; \n}\n\n\nexport default connect(mapStateToProps)(SortingVisualizer);"]},"metadata":{},"sourceType":"module"}