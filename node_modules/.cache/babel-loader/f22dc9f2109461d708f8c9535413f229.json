{"ast":null,"code":"import _toConsumableArray from\"/Users/urdoom/sorting_visualizer_react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/urdoom/sorting_visualizer_react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import store from'../store';//############ START SLIDER & RESET BTN DESIGN  ########\nimport{withStyles,makeStyles}from'@material-ui/core/styles';import Slider from'@material-ui/core/Slider';import Typography from'@material-ui/core/Typography';import Tooltip from'@material-ui/core/Tooltip';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{width:300+theme.spacing(3)*2,padding:0},margin:{height:theme.spacing(1)}};});function ValueLabelComponent(props){var children=props.children,open=props.open,value=props.value;return/*#__PURE__*/_jsx(Tooltip,{open:open,enterTouchDelay:0,placement:\"top\",title:value,children:children});}var PrettoSlider=withStyles({root:{color:'#52af77',height:8},thumb:{height:24,width:24,backgroundColor:'#fff',border:'2px solid currentColor',marginTop:-8,marginLeft:0,marginRight:10,'&:focus, &:hover, &$active':{boxShadow:'inherit'}},active:{},valueLabel:{left:'calc(-50% + 4px)'},track:{height:8,borderRadius:4},rail:{height:8,borderRadius:4}})(Slider);//############ END SLIDER & RESET BTN DESIGN  ########\nexport default function InputArraySlider(props){var classes=useStyles();// create inital slider value (0) and a function to update it\nvar _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),_=_React$useState2[0],setSliderValue=_React$useState2[1];//handleSliderChange gets the value from the slider\nvar handleSliderChange=function handleSliderChange(event,newValue){var lever=1;var pumpedValue=newValue*lever;if(pumpedValue>0){setSliderValue(pumpedValue);//updates the previous value of the slider\n// create a liste of random number with length of newValue\nvar newArray=_toConsumableArray(Array(pumpedValue)).map(function(_){return Math.ceil(Math.random()*400);});// dispatch the new list: update the store with our new list\nstore.dispatch({type:'SET_LIST',payload:newArray});};};return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.margin}),/*#__PURE__*/_jsx(Typography,{gutterBottom:true,children:\"Change the size of the chart\"}),/*#__PURE__*/_jsx(PrettoSlider,{valueLabelDisplay:\"auto\",\"aria-label\":\"pretto slider\",defaultValue:1,min:1,max:300,onChange:handleSliderChange})]});}","map":{"version":3,"sources":["/Users/urdoom/sorting_visualizer_react/src/components/ArraySlider.js"],"names":["React","store","withStyles","makeStyles","Slider","Typography","Tooltip","useStyles","theme","root","width","spacing","padding","margin","height","ValueLabelComponent","props","children","open","value","PrettoSlider","color","thumb","backgroundColor","border","marginTop","marginLeft","marginRight","boxShadow","active","valueLabel","left","track","borderRadius","rail","InputArraySlider","classes","useState","_","setSliderValue","handleSliderChange","event","newValue","lever","pumpedValue","newArray","Array","map","Math","ceil","random","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport store from '../store'\n\n//############ START SLIDER & RESET BTN DESIGN  ########\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 300 + theme.spacing(3) * 2,\n    padding: 0,\n  },\n  margin: {\n    height: theme.spacing(1),\n  },\n}));\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nconst PrettoSlider = withStyles({ \n  root: {\n    color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: 0,\n    marginRight: 10,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n//############ END SLIDER & RESET BTN DESIGN  ########\nexport default function InputArraySlider(props) {\n  const classes = useStyles();\n    // create inital slider value (0) and a function to update it\n  const [_, setSliderValue] = React.useState(0);\n\n  //handleSliderChange gets the value from the slider\n  const handleSliderChange = (event, newValue) => {\n    const lever = 1;\n    const pumpedValue = newValue * lever;\n    if (pumpedValue > 0) {\n      setSliderValue(pumpedValue); //updates the previous value of the slider\n      // create a liste of random number with length of newValue\n      const newArray = [...Array(pumpedValue)].map(_=>Math.ceil(Math.random()*400));\n      // dispatch the new list: update the store with our new list\n      store.dispatch({\n        type: 'SET_LIST',\n        payload: newArray\n      })\n    };\n  };\n\n  return (\n    <div className={classes.root} >\n      <div className={classes.margin}/>\n      <Typography gutterBottom>Change the size of the chart</Typography>\n      <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={1} min={1} max={300} onChange={handleSliderChange}/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}