{"ast":null,"code":"var _jsxFileName = \"/Users/urdoom/sorting_visualizer_react/src/GenerateList.js\";\nimport Button from '@material-ui/core/Button';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenerateList(props) {\n  const size = props.ArraySize;\n  console.log(size);\n  const myArray = [...Array({\n    size\n  })].map(_ => Math.ceil(Math.random() * {\n    size\n  }));\n  console.log(myArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generate-list\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disableElevation: true,\n      children: \"Generate List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = GenerateList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateList\");","map":{"version":3,"sources":["/Users/urdoom/sorting_visualizer_react/src/GenerateList.js"],"names":["Button","React","GenerateList","props","size","ArraySize","console","log","myArray","Array","map","_","Math","ceil","random"],"mappings":";AACA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,QAAMC,IAAI,GAAGD,KAAK,CAACE,SAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAMI,OAAO,GAAG,CAAC,GAAGC,KAAK,CAAC;AAACL,IAAAA;AAAD,GAAD,CAAT,EAAmBM,GAAnB,CAAuBC,CAAC,IAAEC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAc;AAACV,IAAAA;AAAD,GAAxB,CAA1B,CAAhB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,gBAAgB,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;KAbuBN,Y","sourcesContent":["\nimport Button from '@material-ui/core/Button';\nimport React from \"react\";\n\n\nexport default function GenerateList(props) {\n  const size = props.ArraySize;\n  console.log(size);\n  const myArray = [...Array({size})].map(_=>Math.ceil(Math.random()*{size}));\n  console.log(myArray);\n\n  return (\n    <div className=\"generate-list\">\n      <Button variant=\"contained\" color=\"primary\" disableElevation>\n        Generate List\n      </Button>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}