{"ast":null,"code":"var _jsxFileName = \"/Users/urdoom/sorting_visualizer_react/src/components/slider.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport React from 'react';\nimport listReducer from '../redux/reducer';\nimport setRawList from '../redux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: 250\n  },\n  input: {\n    width: 42\n  }\n});\nexport default function InputSlider(props) {\n  _s();\n\n  const classes = useStyles(); //material-ui\n\n  const [sliderValue, setSliderValue] = React.useState(0);\n  const [array, setRawArray] = React.useState([]);\n\n  const handleSliderChange = (event, newValue) => {\n    console.log(newValue);\n\n    if (newValue > 0) {\n      setSliderValue(newValue);\n      const newArray = [...Array(newValue)].map(_ => Math.ceil(Math.random() * 300));\n      setRawArray(newArray);\n      console.log('array:', array);\n    }\n\n    ;\n  };\n\n  const handleInputChange = (event, newValue) => {\n    setSliderValue(event.target.sliderValue === '' ? '' : Number(event.target.sliderValue)); // props.getArraySize(event.target.sliderValue);\n  };\n\n  const handleBlur = () => {\n    if (sliderValue < 0) {\n      setSliderValue(0);\n    } else if (sliderValue > 300) {\n      setSliderValue(300);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"input-slider\",\n        gutterBottom: true,\n        children: \"Size of the list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            value: typeof sliderValue === 'number' ? sliderValue : 0,\n            onChange: handleSliderChange,\n            \"aria-labelledby\": \"input-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            className: classes.input,\n            value: sliderValue,\n            margin: \"dense\",\n            onChange: handleInputChange,\n            onBlur: handleBlur,\n            inputProps: {\n              step: 1,\n              min: 10,\n              max: 300,\n              type: 'number',\n              'aria-labelledby': 'input-slider'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputSlider, \"cWEBQ1RNpzc/xm/kihge2BGfHkI=\", false, function () {\n  return [useStyles];\n});\n\n_c = InputSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSlider\");","map":{"version":3,"sources":["/Users/urdoom/sorting_visualizer_react/src/components/slider.js"],"names":["makeStyles","Grid","Typography","Slider","Input","React","listReducer","setRawList","useStyles","root","width","input","InputSlider","props","classes","sliderValue","setSliderValue","useState","array","setRawArray","handleSliderChange","event","newValue","console","log","newArray","Array","map","_","Math","ceil","random","handleInputChange","target","Number","handleBlur","step","min","max","type"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\n\nimport React from 'react';\nimport listReducer from '../redux/reducer';\nimport setRawList from '../redux/action';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nexport default function InputSlider(props) {\n  const classes = useStyles(); //material-ui\n\n  const [sliderValue, setSliderValue] = React.useState(0);\n  const [array, setRawArray] = React.useState([]);\n\n  const handleSliderChange = (event, newValue) => {\n    console.log(newValue);\n    if (newValue > 0) {\n      setSliderValue(newValue);\n      const newArray = [...Array(newValue)].map(_=>Math.ceil(Math.random()*300));\n      setRawArray(newArray);\n      console.log('array:',array);\n    };\n  };\n\n  const handleInputChange = (event, newValue) => {\n    setSliderValue(event.target.sliderValue === '' ? '' : Number(event.target.sliderValue));\n    // props.getArraySize(event.target.sliderValue);\n  };\n\n  const handleBlur = () => {\n    if (sliderValue < 0) {\n      setSliderValue(0);\n    } else if (sliderValue > 300) {\n      setSliderValue(300);\n    }\n  };\n\n  return (\n    <div className=\"slider-container\">\n        <div className={classes.root}>\n        <Typography id=\"input-slider\" gutterBottom>\n            Size of the list\n        </Typography>\n        <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs>\n            <Slider\n                value={typeof sliderValue === 'number' ? sliderValue : 0}\n                onChange={handleSliderChange}\n                aria-labelledby=\"input-slider\"\n            />\n            </Grid>\n            <Grid item>\n            <Input\n                className={classes.input}\n                value={sliderValue}\n                margin=\"dense\"\n                onChange={handleInputChange}\n                onBlur={handleBlur}\n                inputProps={{\n                step: 1,\n                min: 10,\n                max: 300,\n                type: 'number',\n                'aria-labelledby': 'input-slider',\n                }}\n            />\n            </Grid>\n        </Grid>\n        </div>\n    </div>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}