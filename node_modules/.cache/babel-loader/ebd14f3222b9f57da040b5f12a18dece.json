{"ast":null,"code":"export function doBubbleSort(array) {\n  const n = array.length;\n  const animations = [];\n  compare(array, n, animations);\n  console.log('sorted:', array);\n  const readyAnimations = animations.slice(0, -2);\n  return readyAnimations;\n\n  function compare(array, n, animations) {\n    for (let i = 0; i <= array.length; i++) {\n      let swapped = false;\n\n      for (let j = 0; j <= n - i - 1; j++) {\n        animations.push([1, j, j + 1]); //select\n\n        if (array[j] > array[j + 1]) {\n          animations.push([2, j, j + 1]); //swap\n\n          swap(array, j, j + 1);\n          swapped = true;\n          animations.push([0, j, j + 1]); //back to normal\n        }\n\n        animations.push([0, j, j + 1]); //back to normal\n      }\n\n      if (swapped == false) {\n        break;\n      }\n    }\n\n    ;\n  }\n}\n\nfunction swap(array, a, b) {\n  const temp = array[a];\n  array[a] = array[b];\n  array[b] = temp;\n}","map":{"version":3,"sources":["/Users/urdoom/sorting_visualizer_react/src/sortingAlgorithms/BubbleSort.js"],"names":["doBubbleSort","array","n","length","animations","compare","console","log","readyAnimations","slice","i","swapped","j","push","swap","a","b","temp"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAChC,QAAMC,CAAC,GAAGD,KAAK,CAACE,MAAhB;AACA,QAAMC,UAAU,GAAG,EAAnB;AACAC,EAAAA,OAAO,CAACJ,KAAD,EAAQC,CAAR,EAAWE,UAAX,CAAP;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACA,QAAMO,eAAe,GAAGJ,UAAU,CAACK,KAAX,CAAiB,CAAjB,EAAmB,CAAC,CAApB,CAAxB;AACA,SAAOD,eAAP;;AAEA,WAASH,OAAT,CAAiBJ,KAAjB,EAAwBC,CAAxB,EAA2BE,UAA3B,EAAuC;AACnC,SAAK,IAAIM,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAET,KAAK,CAACE,MAAvB,EAA+BO,CAAC,EAAhC,EAAoC;AAChC,UAAIC,OAAO,GAAG,KAAd;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAGV,CAAC,GAACQ,CAAF,GAAI,CAAtB,EAAyBE,CAAC,EAA1B,EAA8B;AAC1BR,QAAAA,UAAU,CAACS,IAAX,CAAgB,CAAC,CAAD,EAAID,CAAJ,EAAOA,CAAC,GAAC,CAAT,CAAhB,EAD0B,CACI;;AAC9B,YAAIX,KAAK,CAACW,CAAD,CAAL,GAAWX,KAAK,CAACW,CAAC,GAAC,CAAH,CAApB,EAA2B;AACvBR,UAAAA,UAAU,CAACS,IAAX,CAAgB,CAAC,CAAD,EAAID,CAAJ,EAAOA,CAAC,GAAC,CAAT,CAAhB,EADuB,CACO;;AAC9BE,UAAAA,IAAI,CAACb,KAAD,EAAQW,CAAR,EAAWA,CAAC,GAAC,CAAb,CAAJ;AACAD,UAAAA,OAAO,GAAG,IAAV;AACAP,UAAAA,UAAU,CAACS,IAAX,CAAgB,CAAC,CAAD,EAAID,CAAJ,EAAOA,CAAC,GAAC,CAAT,CAAhB,EAJuB,CAIO;AACjC;;AACDR,QAAAA,UAAU,CAACS,IAAX,CAAgB,CAAC,CAAD,EAAID,CAAJ,EAAOA,CAAC,GAAC,CAAT,CAAhB,EAR0B,CAQI;AACjC;;AACD,UAAID,OAAO,IAAI,KAAf,EAAsB;AAClB;AACH;AACJ;;AAAA;AACJ;AACJ;;AAED,SAASG,IAAT,CAAcb,KAAd,EAAqBc,CAArB,EAAwBC,CAAxB,EAA2B;AACvB,QAAMC,IAAI,GAAGhB,KAAK,CAACc,CAAD,CAAlB;AACAd,EAAAA,KAAK,CAACc,CAAD,CAAL,GAAWd,KAAK,CAACe,CAAD,CAAhB;AACAf,EAAAA,KAAK,CAACe,CAAD,CAAL,GAAWC,IAAX;AACH","sourcesContent":["export function doBubbleSort(array) {\n    const n = array.length;\n    const animations = [];\n    compare(array, n, animations);\n    console.log('sorted:', array);\n    const readyAnimations = animations.slice(0,-2);\n    return readyAnimations;\n\n    function compare(array, n, animations) {\n        for (let i=0; i<=array.length; i++) {\n            let swapped = false;\n            for (let j=0; j<= n-i-1; j++) {\n                animations.push([1, j, j+1]); //select\n                if (array[j] > array[j+1]) {\n                    animations.push([2, j, j+1]); //swap\n                    swap(array, j, j+1)\n                    swapped = true;\n                    animations.push([0, j, j+1]); //back to normal\n                }\n                animations.push([0, j, j+1]); //back to normal\n            }\n            if (swapped == false) {\n                break\n            }\n        };\n    }\n}\n\nfunction swap(array, a, b) {\n    const temp = array[a];\n    array[a] = array[b];\n    array[b] = temp;\n}"]},"metadata":{},"sourceType":"module"}