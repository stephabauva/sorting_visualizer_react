{"ast":null,"code":"var _jsxFileName = \"/Users/urdoom/sorting_visualizer_react/src/components/SpeedSlider.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport store from '../store';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 300 + theme.spacing(3) * 2,\n    paddingLeft: 20\n  },\n  margin: {\n    height: theme.spacing(1)\n  }\n}));\n\nfunction ValueLabelComponent(props) {\n  const {\n    children,\n    open,\n    value\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    open: open,\n    enterTouchDelay: 0,\n    placement: \"top\",\n    title: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ValueLabelComponent;\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired\n};\nconst PrettoSlider = withStyles({\n  //styled-component ?\n  root: {\n    color: '#52af77',\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: 0,\n    marginRight: 10,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit'\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)'\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  }\n})(Slider);\nexport default function InputSpeedSlider(props) {\n  _s();\n\n  const INITIAL_SPEED = store.getState()['sortSpeedReducer']['niceSpeed'];\n  const classes = useStyles();\n  const [_, setSliderValue] = React.useState(0); //handleSpeedChange gets the value from the slider\n\n  const handleSpeedChange = (event, newValue) => {\n    const lever = 1;\n    const newSpeed = newValue * lever;\n\n    if (newSpeed >= 0) {\n      setSliderValue(newSpeed); //updates the previous value of the slider\n      // dispatch the new list: update the store with the new speed\n\n      store.dispatch({\n        type: 'SET_SORT_SPEED',\n        payload: newSpeed\n      });\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.margin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      gutterBottom: true,\n      children: \"Slow the sorting speed down (ms)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrettoSlider, {\n      valueLabelDisplay: \"auto\",\n      defaultValue: INITIAL_SPEED,\n      max: 1000,\n      onChange: handleSpeedChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputSpeedSlider, \"T0tgpJiRyc8y0Geoj1qLXiF0QNQ=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = InputSpeedSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ValueLabelComponent\");\n$RefreshReg$(_c2, \"InputSpeedSlider\");","map":{"version":3,"sources":["/Users/urdoom/sorting_visualizer_react/src/components/SpeedSlider.js"],"names":["React","store","PropTypes","withStyles","makeStyles","Slider","Typography","Tooltip","useStyles","theme","root","width","spacing","paddingLeft","margin","height","ValueLabelComponent","props","children","open","value","propTypes","element","isRequired","bool","number","PrettoSlider","color","thumb","backgroundColor","border","marginTop","marginLeft","marginRight","boxShadow","active","valueLabel","left","track","borderRadius","rail","InputSpeedSlider","INITIAL_SPEED","getState","classes","_","setSliderValue","useState","handleSpeedChange","event","newValue","lever","newSpeed","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport store from '../store'\n\n\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 300 + theme.spacing(3) * 2,\n    paddingLeft: 20,\n  },\n  margin: {\n    height: theme.spacing(1),\n  },\n}));\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nconst PrettoSlider = withStyles({ //styled-component ?\n  root: {\n    color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: 0,\n    marginRight: 10,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nexport default function InputSpeedSlider(props) {\n  const INITIAL_SPEED = store.getState()['sortSpeedReducer']['niceSpeed']\n  const classes = useStyles();\n  const [_, setSliderValue] = React.useState(0);\n\n  //handleSpeedChange gets the value from the slider\n  const handleSpeedChange = (event, newValue) => {\n    const lever = 1;\n    const newSpeed = newValue * lever;\n    if (newSpeed >= 0) {\n      setSliderValue(newSpeed); //updates the previous value of the slider\n      // dispatch the new list: update the store with the new speed\n      store.dispatch({\n        type: 'SET_SORT_SPEED',\n        payload: newSpeed\n      })\n    };\n  };\n\n  return (\n    <div className={classes.root} >\n      <div className={classes.margin} />\n      <Typography gutterBottom>Slow the sorting speed down (ms)</Typography>\n      <PrettoSlider valueLabelDisplay=\"auto\"  defaultValue={INITIAL_SPEED} max={1000} onChange={handleSpeedChange}/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}