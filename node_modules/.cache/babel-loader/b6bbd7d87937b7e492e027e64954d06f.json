{"ast":null,"code":"var _jsxFileName = \"/Users/urdoom/sorting_visualizer_react/src/components/Slider.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport store from '../store';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 300 + theme.spacing(3) * 2\n  },\n  margin: {\n    height: theme.spacing(3)\n  }\n}));\n\nfunction ValueLabelComponent(props) {\n  const {\n    children,\n    open,\n    value\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    open: open,\n    enterTouchDelay: 0,\n    placement: \"top\",\n    title: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ValueLabelComponent;\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired\n};\nconst iOSBoxShadow = '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\nconst marks = [{\n  value: 0\n}, {\n  value: 20\n}, {\n  value: 37\n}, {\n  value: 300\n}];\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#52af77',\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit'\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)'\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  }\n})(Slider);\nexport default function InputSlider(props) {\n  _s();\n\n  const classes = useStyles(); // create inital slider value (0) and a function to update it\n\n  const [sliderValue, setSliderValue] = React.useState(0); //handleSliderChange gets the value from the slider\n\n  const handleSliderChange = (event, newValue) => {\n    // console.log(newValue);\n    if (newValue > 0) {\n      setSliderValue(newValue); //updates the previous value of the slider\n      // create a liste of random number with length of newValue\n\n      const newArray = [...Array(newValue)].map(_ => Math.ceil(Math.random() * 300)); // dispatch the new list: update the store with our new list\n\n      store.dispatch({\n        type: 'SET_LIST',\n        payload: newArray\n      });\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.margin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      gutterBottom: true,\n      children: \"pretto.fr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrettoSlider, {\n      valueLabelDisplay: \"auto\",\n      \"aria-label\": \"pretto slider\",\n      defaultValue: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.margin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      ValueLabelComponent: ValueLabelComponent,\n      \"aria-label\": \"custom thumb label\",\n      defaultValue: sliderValue,\n      onChange: handleSliderChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.margin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputSlider, \"dysUOHwe4CdfwEs+OL41ECO7+LY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = InputSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ValueLabelComponent\");\n$RefreshReg$(_c2, \"InputSlider\");","map":{"version":3,"sources":["/Users/urdoom/sorting_visualizer_react/src/components/Slider.js"],"names":["React","store","PropTypes","withStyles","makeStyles","Slider","Typography","Tooltip","useStyles","theme","root","width","spacing","margin","height","ValueLabelComponent","props","children","open","value","propTypes","element","isRequired","bool","number","iOSBoxShadow","marks","PrettoSlider","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","InputSlider","classes","sliderValue","setSliderValue","useState","handleSliderChange","event","newValue","newArray","Array","map","_","Math","ceil","random","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport store from '../store'\n\n\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 300 + theme.spacing(3) * 2,\n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nconst iOSBoxShadow =\n  '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst marks = [\n  {\n    value: 0,\n  },\n  {\n    value: 20,\n  },\n  {\n    value: 37,\n  },\n  {\n    value: 300,\n  },\n];\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nexport default function InputSlider(props) {\n  const classes = useStyles();\n    // create inital slider value (0) and a function to update it\n  const [sliderValue, setSliderValue] = React.useState(0);\n\n  //handleSliderChange gets the value from the slider\n  const handleSliderChange = (event, newValue) => {\n    // console.log(newValue);\n    if (newValue > 0) {\n      setSliderValue(newValue); //updates the previous value of the slider\n      // create a liste of random number with length of newValue\n      const newArray = [...Array(newValue)].map(_=>Math.ceil(Math.random()*300));\n      // dispatch the new list: update the store with our new list\n      store.dispatch({\n        type: 'SET_LIST',\n        payload: newArray\n      })\n    };\n  };\n\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.margin} />\n      <Typography gutterBottom>pretto.fr</Typography>\n      <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={20} />\n      <div className={classes.margin} />\n      <Slider\n        ValueLabelComponent={ValueLabelComponent}\n        aria-label=\"custom thumb label\"\n        defaultValue={sliderValue}\n        onChange={handleSliderChange}\n      />\n      <div className={classes.margin} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}