{"ast":null,"code":"export function doInsertionSort(init_array) {\n  const animations = [];\n  const array = init_array.slice();\n  console.log(array);\n\n  for (let i = 1; i < array.length; i++) {\n    let key = array[i];\n    animations.push([1, i]); //red\n\n    let j = i - 1;\n\n    while (j >= 0 && key < array[j]) {\n      animations.push([2, j + 1]); //purple\n\n      array[j + 1] = array[j];\n      animations.push([4, j + 1, array[j]]);\n      animations.push([3, j + 1]);\n      animations.push([0, j + 1]);\n      j -= 1;\n    }\n\n    array[j + 1] = key;\n    animations.push([4, j + 1, key]); // animations.push([0, j+1, key]);\n  }\n\n  console.log('sorted:', array);\n  return animations;\n}","map":{"version":3,"sources":["/Users/urdoom/sorting_visualizer_react/src/sortingAlgorithms/InsertionSort.js"],"names":["doInsertionSort","init_array","animations","array","slice","console","log","i","length","key","push","j"],"mappings":"AAAA,OAAO,SAASA,eAAT,CAAyBC,UAAzB,EAAqC;AACxC,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,KAAK,GAAGF,UAAU,CAACG,KAAX,EAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,OAAK,IAAII,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,KAAK,CAACK,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/B,QAAIE,GAAG,GAAGN,KAAK,CAACI,CAAD,CAAf;AACAL,IAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,CAAD,EAAIH,CAAJ,CAAhB,EAF+B,CAEN;;AACzB,QAAII,CAAC,GAAGJ,CAAC,GAAC,CAAV;;AACA,WAAOI,CAAC,IAAE,CAAH,IAAQF,GAAG,GAACN,KAAK,CAACQ,CAAD,CAAxB,EAA6B;AACzBT,MAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,CAAD,EAAIC,CAAC,GAAC,CAAN,CAAhB,EADyB,CACE;;AAC3BR,MAAAA,KAAK,CAACQ,CAAC,GAAG,CAAL,CAAL,GAAeR,KAAK,CAACQ,CAAD,CAApB;AACAT,MAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,CAAD,EAAIC,CAAC,GAAC,CAAN,EAASR,KAAK,CAACQ,CAAD,CAAd,CAAhB;AACAT,MAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,CAAD,EAAIC,CAAC,GAAC,CAAN,CAAhB;AACAT,MAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,CAAD,EAAIC,CAAC,GAAC,CAAN,CAAhB;AACAA,MAAAA,CAAC,IAAE,CAAH;AACH;;AACDR,IAAAA,KAAK,CAACQ,CAAC,GAAC,CAAH,CAAL,GAAWF,GAAX;AACAP,IAAAA,UAAU,CAACQ,IAAX,CAAgB,CAAC,CAAD,EAAIC,CAAC,GAAC,CAAN,EAASF,GAAT,CAAhB,EAb+B,CAc/B;AACH;;AACDJ,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;AACA,SAAOD,UAAP;AACH","sourcesContent":["export function doInsertionSort(init_array) {\n    const animations = [];\n    const array = init_array.slice();\n    console.log(array);\n    for (let i=1; i<array.length; i++) {\n        let key = array[i];\n        animations.push([1, i]); //red\n        let j = i-1;\n        while (j>=0 && key<array[j]) {\n            animations.push([2, j+1]); //purple\n            array[j + 1] = array[j];\n            animations.push([4, j+1, array[j]]);\n            animations.push([3, j+1]);\n            animations.push([0, j+1]);\n            j-=1;\n        }\n        array[j+1]=key;\n        animations.push([4, j+1, key]);\n        // animations.push([0, j+1, key]);\n    }\n    console.log('sorted:', array);\n    return animations\n}"]},"metadata":{},"sourceType":"module"}