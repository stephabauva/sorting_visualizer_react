{"ast":null,"code":"const INIT_COLOR = 'turquoise';\nconst PIVOT_VALUE_COLOR = 'red';\nconst COMPARING_COLOR = '#8000ff';\nconst SWAPING_COLOR = 'green';\nconst FINAL_SORTED_COLOR = '#7dff84';\nconst ANIMATION_SPEED_MS = 10;\nconst animations = [];\nconst arrayBars = document.getElementsByClassName('array-bar');\nexport function doQuickSort(init_array) {\n  console.log('array:', init_array);\n  const array = init_array.slice();\n  const start = 0;\n  const end = array.length - 1;\n  quickSort(array, start, end);\n  return animations;\n}\n\nfunction quickSort(arr, start, end) {\n  if (start >= end) {\n    return;\n  }\n\n  let index = partition(arr, start, end); // await Promise.all([\n  //     quickSort(arr, start, index-1), \n  //     quickSort(arr, index+1, end)\n  // ]);\n\n  quickSort(arr, start, index - 1);\n  quickSort(arr, index + 1, end);\n}\n\nfunction partition(arr, start, end) {\n  let pivotIndex = start;\n  let pivotValue = arr[end];\n\n  for (let i = start; i < end; i++) {\n    arrayBars[end].style.backgroundColor = PIVOT_VALUE_COLOR;\n    arrayBars[i].style.backgroundColor = COMPARING_COLOR;\n\n    if (arr[i] < pivotValue) {\n      swap(arr, i, pivotIndex);\n      arrayBars[end].style.backgroundColor = INIT_COLOR;\n      arrayBars[i].style.backgroundColor = INIT_COLOR;\n      pivotIndex++;\n    }\n  }\n\n  swap(arr, pivotIndex, end);\n  return pivotIndex;\n}\n\nfunction swap(arr, a, b) {\n  // console.log('arrayBars swap:', arrayBars);\n  // await sleep(10);\n  let temp = arr[a];\n  arrayBars[a].style.height = `${arr[b]}px`;\n  arrayBars[a].style.backgroundColor = SWAPING_COLOR;\n  arrayBars[b].style.height = `${temp}px`;\n  arrayBars[b].style.backgroundColor = SWAPING_COLOR;\n  arr[a] = arr[b];\n  arr[b] = temp; // let tempBarA = arrayBars[a].style.height;\n  // console.log(temp, tempBarA);\n  // await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n}\n\nasync function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}","map":{"version":3,"sources":["/Users/urdoom/sorting_visualizer_react/src/sortingAlgorithms/quickSort.js"],"names":["INIT_COLOR","PIVOT_VALUE_COLOR","COMPARING_COLOR","SWAPING_COLOR","FINAL_SORTED_COLOR","ANIMATION_SPEED_MS","animations","arrayBars","document","getElementsByClassName","doQuickSort","init_array","console","log","array","slice","start","end","length","quickSort","arr","index","partition","pivotIndex","pivotValue","i","style","backgroundColor","swap","a","b","temp","height","sleep","ms","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["const INIT_COLOR = 'turquoise';\nconst PIVOT_VALUE_COLOR = 'red';\nconst COMPARING_COLOR = '#8000ff';\nconst SWAPING_COLOR = 'green';\nconst FINAL_SORTED_COLOR = '#7dff84';\nconst ANIMATION_SPEED_MS = 10;\nconst animations = [];\nconst arrayBars = document.getElementsByClassName('array-bar');\n\nexport function doQuickSort(init_array) {\n    console.log('array:', init_array);\n    const array = init_array.slice();\n    const start = 0;\n    const end = array.length-1;\n    quickSort(array, start, end);\n    return animations;\n  }\n\nfunction quickSort(arr, start, end) {\n    if (start >= end) {\n        return;\n    }\n    let index = partition(arr, start, end);\n    // await Promise.all([\n    //     quickSort(arr, start, index-1), \n    //     quickSort(arr, index+1, end)\n    // ]);\n    quickSort(arr, start, index-1);\n    quickSort(arr, index+1, end)\n\n}\n\nfunction partition(arr, start , end) {\n    let pivotIndex = start;\n    let pivotValue = arr[end];\n    for (let i = start; i < end; i++) {\n        arrayBars[end].style.backgroundColor = PIVOT_VALUE_COLOR;\n        arrayBars[i].style.backgroundColor = COMPARING_COLOR;\n        if (arr[i] < pivotValue) {\n            swap(arr, i, pivotIndex);\n            arrayBars[end].style.backgroundColor = INIT_COLOR;\n            arrayBars[i].style.backgroundColor = INIT_COLOR;\n            pivotIndex++;\n        }\n    }\n    swap(arr, pivotIndex, end);\n    return pivotIndex;\n}\n\nfunction swap(arr, a, b) {\n    \n    // console.log('arrayBars swap:', arrayBars);\n    // await sleep(10);\n    let temp = arr[a];\n    arrayBars[a].style.height = `${arr[b]}px`;\n    arrayBars[a].style.backgroundColor = SWAPING_COLOR;\n    arrayBars[b].style.height = `${temp}px`;\n    arrayBars[b].style.backgroundColor = SWAPING_COLOR;\n\n    arr[a] = arr[b];\n    arr[b] = temp;\n    // let tempBarA = arrayBars[a].style.height;\n    // console.log(temp, tempBarA);\n    // await new Promise((resolve) => setTimeout(resolve, ANIMATION_SPEED_MS));\n    \n}\n\nasync function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}"]},"metadata":{},"sourceType":"module"}