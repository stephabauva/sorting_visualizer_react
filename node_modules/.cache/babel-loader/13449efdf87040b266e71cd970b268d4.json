{"ast":null,"code":"var _jsxFileName = \"/Users/urdoom/sorting_visualizer_react/src/sortingVisualizer/SortingVisualizer.js\";\nimport store from '../store';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /****** SUBSCRIBE(listener) ******/\n} // subscribe(listener) -> Adds a change listener:\n// It will be called any time an action is dispatched, and some \n// part of the state tree may potentially have changed.\n//Link: https://redux.js.org/api/store#subscribelistener\n\nfunction select(state) {\n  return state;\n}\n\nfunction handleChange() {\n  const currentValue = select(store.getState().listState); // console.log('handleChange:',currentValue)\n\n  return SortingVisualizer(currentValue);\n}\n\nconst unsubscribe = store.subscribe(handleChange); // unsubscribe()\n\n{\n  /************************************/\n} // This is the main color of the array bars.\n\nconst PRIMARY_COLOR = 'turquoise';\nexport default function SortingVisualizer(unsubscribe) {\n  const generatedList = Array(unsubscribe); //to transform the 'object' as an array\n  // const generatedList = unsubscribe;\n\n  console.log('generatedList:', generatedList); // console.log('is array:',Array.isArray(generatedList));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"array-container\",\n    children: generatedList[0].map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-bar\",\n      style: {\n        backgroundColor: PRIMARY_COLOR,\n        height: `${value}px`\n      }\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = SortingVisualizer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingVisualizer\");","map":{"version":3,"sources":["/Users/urdoom/sorting_visualizer_react/src/sortingVisualizer/SortingVisualizer.js"],"names":["store","React","useState","select","state","handleChange","currentValue","getState","listState","SortingVisualizer","unsubscribe","subscribe","PRIMARY_COLOR","generatedList","Array","console","log","map","value","idx","backgroundColor","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA;AAAC;AAAoC,C,CACrC;AACA;AACA;AACA;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,SAAOA,KAAP;AACH;;AAED,SAASC,YAAT,GAAwB;AACpB,QAAMC,YAAY,GAAGH,MAAM,CAACH,KAAK,CAACO,QAAN,GAAiBC,SAAlB,CAA3B,CADoB,CAEpB;;AACA,SAAOC,iBAAiB,CAACH,YAAD,CAAxB;AACC;;AAEL,MAAMI,WAAW,GAAGV,KAAK,CAACW,SAAN,CAAgBN,YAAhB,CAApB,C,CACA;;AAEA;AAAC;AAAuC,C,CAExC;;AACA,MAAMO,aAAa,GAAG,WAAtB;AAEA,eAAe,SAASH,iBAAT,CAA2BC,WAA3B,EAAwC;AACnD,QAAMG,aAAa,GAAGC,KAAK,CAACJ,WAAD,CAA3B,CADmD,CACV;AAErC;;AACJK,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BH,aAA7B,EAJmD,CAKnD;;AACA,sBACA;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACKA,aAAa,CAAC,CAAD,CAAb,CAAiBI,GAAjB,CAAqB,CAACC,KAAD,EAAQC,GAAR,kBAClB;AACI,MAAA,SAAS,EAAC,WADd;AAGI,MAAA,KAAK,EAAE;AACHC,QAAAA,eAAe,EAAER,aADd;AAEHS,QAAAA,MAAM,EAAG,GAAEH,KAAM;AAFd;AAHX,OAESC,GAFT;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAWH;KAjBuBV,iB","sourcesContent":["import store from '../store';\nimport React, { useState } from \"react\";\n\n{/****** SUBSCRIBE(listener) ******/}\n// subscribe(listener) -> Adds a change listener:\n// It will be called any time an action is dispatched, and some \n// part of the state tree may potentially have changed.\n//Link: https://redux.js.org/api/store#subscribelistener\nfunction select(state) {\n    return state\n}\n\nfunction handleChange() {\n    const currentValue = select(store.getState().listState);\n    // console.log('handleChange:',currentValue)\n    return SortingVisualizer(currentValue);\n    }\n\nconst unsubscribe = store.subscribe(handleChange)\n// unsubscribe()\n\n{/************************************/}\n\n// This is the main color of the array bars.\nconst PRIMARY_COLOR = 'turquoise';\n\nexport default function SortingVisualizer(unsubscribe) {\n    const generatedList = Array(unsubscribe) //to transform the 'object' as an array\n        \n        // const generatedList = unsubscribe;\n    console.log('generatedList:',generatedList);\n    // console.log('is array:',Array.isArray(generatedList));\n    return (\n    <div className='array-container'>\n        {generatedList[0].map((value, idx) => (\n            <div\n                className=\"array-bar\"\n                key={idx}\n                style={{\n                    backgroundColor: PRIMARY_COLOR,\n                    height: `${value}px` }}></div>\n        ))}\n    </div>);\n}\n\n\n  \n  "]},"metadata":{},"sourceType":"module"}